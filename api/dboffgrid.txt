CREATE TABLE IF NOT EXISTS `customers` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name`  text NOT NULL,
  `email` text NOT NULL,
  `phone` text NOT NULL,
  `location` text,
  `information` text,
`autonomyday` int,
`season` int,
`status` int DEFAULT 0,
  `created` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
--------------------------------------------------------
CREATE TABLE IF NOT EXISTS `devices` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name`  text,
  `amount` decimal,
  `watt` decimal,
  `hour` decimal,
  `day` decimal,
  `wattrequired` decimal(13,5),
  `capacity` decimal(13,5),
  `amper` decimal(13,5),
  `solarp` decimal(13,5),
  `panelcount` decimal(6,2),
  `cid` int NOT NULL,
  PRIMARY KEY (`id`),
  INDEX (cid),
    FOREIGN KEY (cid)
        REFERENCES customers(id)
        ON DELETE CASCADE
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
---------------------------------------------------------
CREATE TABLE IF NOT EXISTS `solars` (
  `id` int NOT NULL AUTO_INCREMENT,
  `cid`  int NOT NULL,
  `connected` decimal,
  `watthour` decimal(13,5),
  `wattinverted` decimal(13,5),
  `wattrequired` decimal(13,5),
  `capacity` decimal(13,5),
  `amper` decimal(13,5),
  `solarp` decimal(13,5),
  `panelcount` decimal(6,2),
  PRIMARY KEY (`id`),
  INDEX (cid),
    FOREIGN KEY (cid)
        REFERENCES customers(id)
        ON DELETE CASCADE
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
---------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `offer_equipments` (
  `id` int NOT NULL AUTO_INCREMENT,
  `cid` int,
  `eid` int,
  `quantity` int,
    PRIMARY KEY (`id`),
    FOREIGN KEY (cid)
        REFERENCES customers(id)
        ON DELETE CASCADE,
        FOREIGN KEY (eid)
        REFERENCES equipments(id)
        ON DELETE CASCADE
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
-----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipments` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(50),
  `type` varchar (20),
  `brand` varchar (15),
  `unit` varchar (15),
  `unit_price` decimal(10,3),
  `value` int,
    PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
--------------------
INSERT INTO equipments VALUES(2,'330W XWY GÜMÜŞ PANEL','PANEL','XWY','ADET',180,330);
INSERT INTO equipments VALUES(3,'360W QWE ALTIN PANEL','PANEL','QWE','ADET',220,360);
INSERT INTO equipments VALUES(4,'2.5-3 SOLAR KABLO','KABLO','REDBLACK','METRE',1.8,6);
INSERT INTO equipments VALUES(5,'ASD AKU 150 AH JEL','AKU','ASD','ADET',400,12);
INSERT INTO equipments VALUES(6,'DAD AKU 130 AH KATI','AKU','DAD','ADET',550,24);
INSERT INTO equipments VALUES(7,'3000W EX INVERTER','INVERTER','EX','ADET',666,3000);
INSERT INTO equipments VALUES(8,'5000W WER INVERETER','INVERTER','WER','ADET',750,5000);
INSERT INTO equipments VALUES(9,'CC PARALEL KOONEKTOR','KONNEKTOR','CC','ADET',1.34,1);
INSERT INTO equipments VALUES(10,'CC DUZ KOONEKTOR','KONNEKTOR','CC','ADET',1.12,1);
INSERT INTO equipments VALUES(11,'AKU BAŞLIĞI','DİĞER','00','ADET',5.43,1);
INSERT INTO equipments VALUES(12,'MUHTELİF','DİĞER','00','ADET',3,1);
INSERT INTO equipments VALUES(13,'İŞÇİLİK VE MONTAJ','DİĞER','00','ADET',1000,1);

---------------------------DELETE RELATIVE DEVICES WHEN CUSTOMER IS DELETED-------------------------------------------------------------
CREATE TRIGGER after_customers_delete
 AFTER DELETE ON customers 
 FOR EACH ROW 
 delete from devices where devices.cid=old.id;


 ---------------------------------------ALTERNATIVE DELETE TRIGGER----------------------------------------------------------------------------------
$query = "DELETE devices,customers,solars FROM 
    devices INNER JOIN customers ON devices.userid=customers.id 
    INNER JOIN solars ON customers.id=solars.userid 
    WHERE customers.name=?" . "";

    -----------------------------------------------------------------------------------

    
(
  select a.name,a.phone,a.email,a.created from customers a JOIN
		(
          select c.name,c.phone,c.email,COUNT(*) as sayı from customers c group by c.name,c.phone HAVING COUNT(*)>5
        ) b
ON a.phone=b.phone AND a.email=b.email ORDER by a.created
);